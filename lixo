<link href="../static/css/bootstrap.min.css" rel="stylesheet">

<link rel="stylesheet" href="../static/css/bootstrap.css">

../static/css/bootstrap.css

config = app_config[app_active]

@app.after_request
    def after_request(response):
        response.headers.add('Access-Control-Allow-Origin', '*')
        response.headers.add('Access-Control-Allow-Headers', 'Conten-Type')
        response.headers.add('Access-Control-Allow-Methods', 'GET, PUT, POST, DELETE, OPTIONS')
        return response

    def auth_token_required(f):
        @wraps(f)
        def verify_token(*args, **kwargs):
            user = UserController()
            try:
                result = user.verify_auth_token(request.headers['access_token'])
                if result['status'] == 200:
                    return f(*args, **kwargs)
                else:
                    abort(result['status'], result['message'])
            except KeyError as e:
                abort(401, 'Você precisa enviar um token de acesso')
        return verify_token


class FormCadastro(FlaskForm):
    num_reg = StringField('Número de Registro')
    tipo_reg = SelectFieldBase('Tipo de Documento')
    objeto = TextAreaField('Objeto')
    origem = SelectFieldBase('Origem')
    destino = SelectFieldBase('Destino')
    date_criacao = DateTimeField('Data de Criação')
    solicitante = SelectFieldBase('Solicitante')
    criador = StringField('Criado por:')

{{ wtf.quick_form(form) }}

  <div class="form-row">
          <div class="form-group col-md-12">
            {{ wtf.form_field(form.num_reg) }}
        <div class="form-row">
          <div class="form-group col-md-6">
            {{ wtf.form_field(form.tipo_reg) }}
          </div>
          <div class="form-group col-md-6">
            {{ wtf.form_field(form.solicitante) }}
          </div>
        </div>
        <div class="form-row">
          <div class="form-group col-md-6">
            {{ wtf.form_field(form.origem) }}
          </div>
          <div class="form-group col-md-6">
            {{ wtf.form_field(form.destino) }}
          </div>
        </div>
        <div class="form-row">
          <div class="form-group col-md-12">
            {{ wtf.form_field(form.objeto) }}
          </div>
        </div>
          </div>

        </div>

   <div class="form-check-inline row">
            {{ form.tipo_destino.label(class="col-form-label col-md-6 pt-0") }}
            {% for subfield in form.tipo_destino %}
                <tr>
                    <td>{{ subfield(class="col-auto mb-3") }}</td>
                    <td>{{ subfield.label(class="col-form-label col-md-2 mb-3") }}</td>
                </tr>
            {% endfor %}

  <div class="form-group row">
            <p>
              {{ form.destino.label(class="col-form-label col-md-2") }}</p>
              {{ form.destino(class="form-control col-md-10 mb-3") }}
          </div>