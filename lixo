<link href="../static/css/bootstrap.min.css" rel="stylesheet">

<link rel="stylesheet" href="../static/css/bootstrap.css">

../static/css/bootstrap.css

config = app_config[app_active]

@app.after_request
    def after_request(response):
        response.headers.add('Access-Control-Allow-Origin', '*')
        response.headers.add('Access-Control-Allow-Headers', 'Conten-Type')
        response.headers.add('Access-Control-Allow-Methods', 'GET, PUT, POST, DELETE, OPTIONS')
        return response

    def auth_token_required(f):
        @wraps(f)
        def verify_token(*args, **kwargs):
            user = UserController()
            try:
                result = user.verify_auth_token(request.headers['access_token'])
                if result['status'] == 200:
                    return f(*args, **kwargs)
                else:
                    abort(result['status'], result['message'])
            except KeyError as e:
                abort(401, 'VocÃª precisa enviar um token de acesso')
        return verify_token


tipodestino_select = document.getElementById('solicitante');
  destino_select = document.getElementById('destino');

  tipodestino_select.onchange = function(){
    solicitante= tipodestino_select.value;
    <!-- alert(solicitante); -->
    fetch('/destino/' + solicitante).then(function(response){
      response.json().then(function(data) {
        optionHTML = '';
        for (destino of data.destinos) {
          optionHTML += '<option value="' + destino.id + '">' + destino.name + '</option>'
        }
        destino_select.innerHTML = optionHTML;
      });
    });
  }


if request.method == 'POST' and form.validate():
            doc = documents (
            num_reg = Documents.query.filter_by(id=form.num_reg.data)
            objeto = Documents.query.filter_by(id=form.objeto.data)
            origen = Documents.query.filter_by(id=form.origem.data)
            destiny = Documents.query.filter_by(id=form.destino.data)
            date_created = Documents.query.filter_by(id=form.date_criacao.data)
            requester = Documents.query.filter_by(id=form.solicitante.data)
            creator = Documents.query.filter_by(id=form.criador.data)
            type = Documents.query.filter_by(id=form.tipo_destino.data)